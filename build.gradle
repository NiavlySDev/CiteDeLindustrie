plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'fr.niavlys.dev.citeIndustrie'

def loadVersion() {
    def versionFile = file('version.txt')
    if (!versionFile.exists()) {
        versionFile.text = '0.1.0'
    }
    return versionFile.text
}

def incrementVersion() {
    def versionFile = file('version.txt')
    def currentVersion = loadVersion().tokenize('.')
    def major = currentVersion[0] as int
    def minor = currentVersion[1] as int
    def patch = currentVersion[2] as int

    patch++
    if (patch > 9) {
        patch = 0
        minor++
    }

    def newVersion = "${major}.${minor}.${patch}"
    versionFile.text = newVersion
    return newVersion
}

version = loadVersion()

task incrementVersionNumber {
    doLast {
        version = incrementVersion()
    }
}

build.dependsOn incrementVersionNumber

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT")
}

tasks {
    runServer {
        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    archiveFileName = 'CiteIndustrie.jar'
}
